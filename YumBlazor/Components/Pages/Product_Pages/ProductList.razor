@page "/product"
@inject IProductRepository _productRepository
@inject IJSRuntime _jsRuntimeExtension

<h3>ProductList</h3>

<BsModel OnModalConfirmation="ConfirmDelete"
        ButtonBootStrapStyle="btn-danger"
        ButtonText="Delete" Title="Are you sure to Delete Product">
</BsModel>
@if(isProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center" >
        <img src="/images/loading.gif" alt="loading">
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-2">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Product List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="product/create" class="btn btn-lg btn-secondary" style="width:250px"><i class="bi bi-plus-square m-2"></i>Add New Product</a>
                </div>
            </div>
            <p>Product's List</p>
            @if (productsList.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Special Tag</th>
                            <th>Category</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var obj in productsList)
                        {
                            <tr>
                                <td>@obj.Name</td>
                                <td>@obj.Price</td>
                                <td>@obj.SpecialTags</td>
                                <td>@(obj.Category.Name == null ? obj.Category.Name: "No Category")</td>
                                <td>
                                    <a href="@($"product/update/{obj.Id}")" class="btn btn-sm btn-primary"><i class="bi bi-pencil-square m-1"></i>Edit</a>
                                    <button class="btn btn-sm btn-danger" @onclick="()=>HandleDelete(obj.Id)"><i class="bi bi-trash m-1"></i>Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool isProcessing { get; set; } = true;
    private IEnumerable<Product> productsList = new List<Product>();
    private Category category = new Category();

    private int DeleteProductID { get; set; } = 0;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProducts();
            isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadProducts()
    {
        productsList = await _productRepository.GetAllAsync();
    }

    private void HandleDelete(int id)
    {
        DeleteProductID = id;
        _jsRuntimeExtension.InvokeVoidAsync("ShowConfirmationModel");
    }

    private async Task ConfirmDelete(bool isConfirmed)
    {
        isProcessing = true;
        if(isConfirmed && DeleteProductID != 0)
        {
            var result = await _productRepository.DeleteAsync(DeleteProductID);
            if(result)
            {
                await _jsRuntimeExtension.ToastrSuccess("Product Deleted Successfully");
                await _jsRuntimeExtension.InvokeVoidAsync("HideConfirmationModel");
            }
            else
            {
                await _jsRuntimeExtension.ToastrError("Error while deleting Product");
            }

            await LoadProducts();

        }
        isProcessing = false;
        DeleteProductID = 0;
    }
}
