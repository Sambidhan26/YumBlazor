@page "/category/create"
@page "/category/update/{id:int}"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime _jsRuntimeExtension

<h3>CategoryUpsert</h3>

@if (isProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading">
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-2">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id > 0 ? "Create" : "Update")Category</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="category" FormName="CategoryUpsert" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator/>
                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 col-12">
                        <InputText id="Name" class="form-control" @bind-Value="category.Name" placeholder="Enter Category Name" />
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(()=>category.Name)">
                        </ValidationMessage>
                    </div>
                    <div class="row m-3">
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-primary form-control" disabled="@isProcessing">
                                <i class="bi bi-floppy2-fill"></i>Update
                            </button>
                        </div>
                    </div>
                    <div class="row m-3">
                        <div class="col-6 col-md-3">
                            <a href="category" class="btn btn-secondary form-control" disabled="@isProcessing">
                               <i class="bi bi-arrow-left-circle"></i>Back to List
                            </a>
                        </div>
                    </div>
                </div>
            </EditForm>

        </div>
     </div>
}

@code {

    [SupplyParameterFromForm]
    private Category category { get; set; } = new Category();

    [Parameter]
    public int Id { get; set; }

    private bool isProcessing { get; set; } = true;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategory();
            isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategory()
    {
        if (Id > 0)
        {

            category = await _categoryRepository.GetAsync(Id);
        }
        else
        {
            //category = await _categoryRepository.CreateAsync(new Category());
        }
    }

    private async Task UpsertCategory()
    {
        isProcessing = true;
        if (Id > 0)
        {
            await _categoryRepository.UpdateAsync(category);
            await _jsRuntimeExtension.ToastrSuccess("Category Updated Successfully");
            
        }
        else
        {
            await _categoryRepository.CreateAsync(category);
            await _jsRuntimeExtension.ToastrSuccess("Category Created Successfully");
        }
        isProcessing = false;
        
        NavigationManager.NavigateTo("category");
    }

}
